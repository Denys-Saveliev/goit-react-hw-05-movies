{"version":3,"file":"static/js/movieDetailsPage-view.ee860b81.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.js","service/moviesApi.js"],"sourcesContent":["import { Routes, Route } from 'react-router-dom';\nimport { useEffect, useState, lazy, Suspense } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport * as Api from '../../service/moviesApi';\nimport {\n  Wrapper,\n  Title,\n  Text,\n  Container,\n  Overview,\n  Box,\n  ContainerLink,\n  MovieTitle,\n  MovieImage,\n  Button,\n  Hr,\n} from './MovieDetailsPage.styled';\nimport { Link } from 'components/Navigation/Navigation.styled';\nimport comingSoonImg from '../../images/soon.png';\nconst Cast = lazy(() =>\n  import('../../components/Cast/Cast' /* webpackChunkName: \"cast-view\" */)\n);\nconst Reviews = lazy(() =>\n  import(\n    '../../components/Reviews/Reviews' /* webpackChunkName: \"reviews-view\" */\n  )\n);\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    Api.fetchMovieDetails(movieId).then(data => setMovie(data.data));\n  }, [movieId]);\n\n  return (\n    <>\n      <Button type=\"button\" onClick={() => navigate(-1)}>\n        Back\n      </Button>\n\n      {movie && (\n        <>\n          <Wrapper>\n            <div>\n              <MovieImage\n                src={\n                  movie.poster_path\n                    ? BASE_IMAGE_URL + movie.poster_path\n                    : comingSoonImg\n                }\n                alt={movie.title}\n              />\n            </div>\n            <Container>\n              <MovieTitle>{movie.title}</MovieTitle>\n              <Box>\n                <Title>Genres:</Title>\n                <Text>\n                  {movie.genres.length\n                    ? movie.genres.map(genre => genre.name).join(', ')\n                    : 'Coming soon'}\n                </Text>\n              </Box>\n\n              <Box>\n                <Title>Rate:</Title>\n                <Text>\n                  {movie.popularity ? movie.popularity : 'Coming soon'}\n                </Text>\n              </Box>\n\n              <Box>\n                <Title>Release date:</Title>\n                <Text>\n                  {movie.release_date ? movie.release_date : 'Coming soon'}\n                </Text>\n              </Box>\n\n              <Overview>Overview</Overview>\n              <Text>{movie.overview ? movie.overview : 'Coming soon'}</Text>\n            </Container>\n          </Wrapper>\n\n          <ContainerLink>\n            <h2 style={{ color: '#2a363b' }}>Additional information:</h2>\n\n            <Link to={`/movies/${movieId}/cast`} replace={true}>\n              Cast\n            </Link>\n            <Link to={`/movies/${movieId}/reviews`} replace={true}>\n              Reviews\n            </Link>\n          </ContainerLink>\n\n          <Hr />\n\n          <Suspense fallback={<>loading...</>}>\n            <Routes>\n              <Route path=\"cast\" element={<Cast />} />\n              <Route path=\"reviews\" element={<Reviews />} />\n            </Routes>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  border: 1px solid #eee56b;\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: #ddddddc4;\n`;\n\nconst Hr = styled.hr`\n  color: #eee56b;\n`;\n\nconst MovieTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 40px;\n  color: #2a363b;\n`;\n\nconst MovieImage = styled.img`\n  width: 250px;\n  height: 375px;\n  object-fit: cover;\n`;\n\nconst Box = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 15px;\n`;\n\nconst Title = styled.h3`\n  font-weight: 500;\n  margin-right: 10px;\n  color: #2a363b;\n`;\n\nconst Text = styled.p`\n  color: #2a363b;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  height: auto;\n  padding: 40px 60px;\n  width: 790px;\n`;\n\nconst ContainerLink = styled.div`\n  display: flex;\n  align-items: baseline;\n  padding: 40px 30px 0;\n\n  h2 {\n    margin-right: 20px;\n    color: #2a363b;\n  }\n`;\n\nconst Overview = styled.h3`\n  font-weight: 500;\n  text-align: center;\n  margin-bottom: 10px;\n  color: #2a363b;\n`;\n\nconst Button = styled.button`\n  margin-bottom: 20px;\n  padding: 5px 15px;\n  border-radius: 5px;\n  border: none;\n  color: #2a363b;\n  transition: all 250ms ease;\n\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.05);\n    color: #2196f3;\n  }\n`;\n\nexport {\n  MovieTitle,\n  MovieImage,\n  Wrapper,\n  Title,\n  Text,\n  Container,\n  Overview,\n  Box,\n  ContainerLink,\n  Button,\n  Hr,\n};\n","import axios from 'axios';\nconst API_KEY = '123f947c685fb26961bd016d0ca5c833';\n\nasync function fetchMoviesWithErrorHandling(url) {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    return new Error('Not found');\n  }\n}\n\nexport function fetchMoviesTrending() {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n"],"names":["Cast","lazy","Reviews","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","useEffect","Api","then","data","type","onClick","src","poster_path","comingSoonImg","alt","title","genres","length","map","genre","name","join","popularity","release_date","overview","style","color","to","replace","Hr","Suspense","fallback","path","element","Wrapper","styled","MovieTitle","MovieImage","Box","Title","Text","Container","ContainerLink","Overview","Button","API_KEY","fetchMoviesWithErrorHandling","url","axios","response","Error","fetchMoviesTrending","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}
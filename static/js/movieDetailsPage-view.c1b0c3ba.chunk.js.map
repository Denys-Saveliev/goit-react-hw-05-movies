{"version":3,"file":"static/js/movieDetailsPage-view.c1b0c3ba.chunk.js","mappings":"iQAEMA,EAAUC,EAAAA,GAAAA,IAAH,0SAmBPC,EAAMD,EAAAA,GAAAA,IAAH,4FAMHE,EAAQF,EAAAA,GAAAA,GAAH,oEAKLG,EAAOH,EAAAA,GAAAA,EAAH,8CAIJI,EAAYJ,EAAAA,GAAAA,IAAH,gEAKTK,EAAgBL,EAAAA,GAAAA,IAAH,qIAUbM,EAAWN,EAAAA,GAAAA,GAAH,4F,mBCrCRO,GAAOC,EAAAA,EAAAA,OAAK,kBAChB,gCAEIC,GAAUD,EAAAA,EAAAA,OAAK,kBACnB,iCA4EF,EArEyB,WACvB,OAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBL,GAASM,MAAK,SAAAC,GAAI,OAAIR,EAASQ,EAAKA,WACzD,CAACP,KAGF,iCACE,mBAAQQ,KAAK,SAASC,QAAS,kBAAMP,GAAU,IAA/C,kBAICJ,IACC,iCACE,UAACZ,EAAD,YACE,0BACE,gBAAKwB,IAtBI,kCAsBkBZ,EAAMa,YAAaC,IAAKd,EAAMe,WAE3D,UAACtB,EAAD,YACE,wBAAKO,EAAMe,SACX,UAACzB,EAAD,YACE,SAACC,EAAD,uBACA,SAACC,EAAD,UAAOQ,EAAMgB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,YAGpD,UAAC9B,EAAD,YACE,SAACC,EAAD,qBACA,uBAAIS,EAAMqB,iBAGZ,UAAC/B,EAAD,YACE,SAACC,EAAD,6BACA,uBAAIS,EAAMsB,mBAGZ,SAAC3B,EAAD,wBACA,uBAAIK,EAAMuB,kBAId,UAAC7B,EAAD,YACE,qDAEA,SAAC,IAAD,CAAM8B,GAAE,kBAAatB,EAAb,SAA6BuB,SAAS,EAA9C,mBAGA,SAAC,IAAD,CAAMD,GAAE,kBAAatB,EAAb,YAAgCuB,SAAS,EAAjD,yBAKF,mBAEA,SAAC,EAAAC,SAAD,CAAUC,UAAU,6CAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACjC,EAAD,OAC5B,SAAC,KAAD,CAAOgC,KAAK,UAAUC,SAAS,SAAC/B,EAAD,mB,0MCpFvCgC,EAAU,mCAAhB,SAEeC,EAA6B,GAA7BA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4CC,GAA5C,gGAE2BC,IAAAA,IAAUD,GAFrC,cAEUE,EAFV,yBAGWA,GAHX,yDAKW,IAAIC,MAAM,cALrB,gFASO,SAASC,IACd,OAAOL,EAA6B,4DAAD,OAC2BD,IAIzD,SAASO,EAAkBC,GAChC,OAAOP,EAA6B,qDAAD,OACoBD,EADpB,iCACoDQ,EADpD,yBAK9B,SAASC,EAAkBrC,GAChC,OAAO6B,EAA6B,sCAAD,OACK7B,EADL,oBACwB4B,EADxB,oBAK9B,SAASU,EAAkBtC,GAChC,OAAO6B,EAA6B,sCAAD,OACK7B,EADL,4BACgC4B,EADhC,oBAK9B,SAASW,EAAkBvC,GAChC,OAAO6B,EAA6B,sCAAD,OACK7B,EADL,4BACgC4B,EADhC","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx","service/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  border: 1px solid #eee56b;\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: #ddddddc4;\n\n  h2 {\n    text-align: center;\n    margin-bottom: 40px;\n  }\n\n  img {\n    width: 250px;\n    object-fit: cover;\n  }\n`;\n\nconst Box = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 15px;\n`;\n\nconst Title = styled.h3`\n  font-weight: 500;\n  margin-right: 10px;\n`;\n\nconst Text = styled.p`\n  margin-right: 8px;\n`;\n\nconst Container = styled.div`\n  height: auto;\n  padding: 40px 60px;\n`;\n\nconst ContainerLink = styled.div`\n  display: flex;\n  align-items: baseline;\n  padding: 40px 30px 0;\n\n  h2 {\n    margin-right: 20px;\n  }\n`;\n\nconst Overview = styled.h3`\n  font-weight: 500;\n  text-align: center;\n  margin-bottom: 10px;\n`;\nexport { Wrapper, Title, Text, Container, Overview, Box, ContainerLink };\n","import { Routes, Route } from 'react-router-dom';\nimport { useEffect, useState, lazy, Suspense } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport * as Api from '../../service/moviesApi';\nimport {\n  Wrapper,\n  Title,\n  Text,\n  Container,\n  Overview,\n  Box,\n  ContainerLink,\n} from './MovieDetailsPage.styled';\nimport { Link } from 'components/Navigation/Navigation.styled';\nconst Cast = lazy(() =>\n  import('../../components/Cast/Cast' /* webpackChunkName: \"cast-view\" */)\n);\nconst Reviews = lazy(() =>\n  import(\n    '../../components/Reviews/Reviews' /* webpackChunkName: \"reviews-view\" */\n  )\n);\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    Api.fetchMovieDetails(movieId).then(data => setMovie(data.data));\n  }, [movieId]);\n\n  return (\n    <>\n      <button type=\"button\" onClick={() => navigate(-1)}>\n        Back\n      </button>\n\n      {movie && (\n        <>\n          <Wrapper>\n            <div>\n              <img src={BASE_IMAGE_URL + movie.poster_path} alt={movie.title} />\n            </div>\n            <Container>\n              <h2>{movie.title}</h2>\n              <Box>\n                <Title>Genres:</Title>\n                <Text>{movie.genres.map(genre => genre.name).join(', ')}</Text>\n              </Box>\n\n              <Box>\n                <Title>Rate:</Title>\n                <p>{movie.popularity}</p>\n              </Box>\n\n              <Box>\n                <Title>Release date:</Title>\n                <p>{movie.release_date}</p>\n              </Box>\n\n              <Overview>Overview</Overview>\n              <p>{movie.overview}</p>\n            </Container>\n          </Wrapper>\n\n          <ContainerLink>\n            <h2>Additional information:</h2>\n\n            <Link to={`/movies/${movieId}/cast`} replace={true}>\n              Cast\n            </Link>\n            <Link to={`/movies/${movieId}/reviews`} replace={true}>\n              Reviews\n            </Link>\n          </ContainerLink>\n\n          <hr />\n\n          <Suspense fallback={<>loading...</>}>\n            <Routes>\n              <Route path=\"cast\" element={<Cast />} />\n              <Route path=\"reviews\" element={<Reviews />} />\n            </Routes>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\nconst API_KEY = '123f947c685fb26961bd016d0ca5c833';\n\nasync function fetchMoviesWithErrorHandling(url) {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    return new Error('Not found');\n  }\n}\n\nexport function fetchMoviesTrending() {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n"],"names":["Wrapper","styled","Box","Title","Text","Container","ContainerLink","Overview","Cast","lazy","Reviews","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","useEffect","Api","then","data","type","onClick","src","poster_path","alt","title","genres","map","genre","name","join","popularity","release_date","overview","to","replace","Suspense","fallback","path","element","API_KEY","fetchMoviesWithErrorHandling","url","axios","response","Error","fetchMoviesTrending","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/moviesPage-view.8f244f1f.chunk.js","mappings":"8JAyBA,IAtBsB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACvB,OACEA,IACE,wBACGA,EAAKC,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACf,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,SAA4BC,KADrBD,U,6GCNRG,EAAa,WACxB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAElBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcF,EAAOG,MAAM,GAC5BD,GAILP,EAASO,KACR,CAACF,IAgBJ,OACE,kBAAMI,SAXa,SAAAC,GAGnB,GAFAA,EAAEC,iBAEmB,KAAjBZ,EAAMa,OACR,OAAOC,MAAM,gCAGfZ,EAAS,GAAD,OAAIG,EAAJ,mBAAuBL,KAI/B,WACE,kBACEe,KAAK,OACLC,MAAOhB,EACPiB,YAAY,gBACZC,SApBoB,SAAAP,GACxBV,EAASU,EAAEQ,cAAcH,MAAMI,mBAqB7B,mBAAQL,KAAK,SAAb,wB,oBCZN,EAvBmB,WACjB,OAAwBhB,EAAAA,EAAAA,UAAS,MAAjC,eAAON,EAAP,KAAa4B,EAAb,KACQf,GAAWF,EAAAA,EAAAA,MAAXE,OAaR,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMP,EAAQM,EAAOG,MAAM,GACtBT,GAILsB,EAAAA,GAAsBtB,GAAOuB,MAAK,SAAA9B,GAChC4B,EAAQ5B,EAAKA,KAAK+B,cAEnB,CAAClB,KAGF,iCACE,SAACR,EAAD,IACCL,IAAQ,SAACgC,EAAA,EAAD,CAAehC,KAAMA,S,0MCvB9BiC,EAAU,mCAAhB,SAEeC,EAA6B,GAA7BA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4CC,GAA5C,gGAE2BC,IAAAA,IAAUD,GAFrC,cAEUE,EAFV,yBAGWA,GAHX,yDAKW,IAAIC,MAAM,cALrB,gFASO,SAASC,IACd,OAAOL,EAA6B,4DAAD,OAC2BD,IAIzD,SAASO,EAAkBjC,GAChC,OAAO2B,EAA6B,qDAAD,OACoBD,EADpB,iCACoD1B,EADpD,yBAK9B,SAASkC,EAAkBC,GAChC,OAAOR,EAA6B,sCAAD,OACKQ,EADL,oBACwBT,EADxB,oBAK9B,SAASU,EAAkBD,GAChC,OAAOR,EAA6B,sCAAD,OACKQ,EADL,4BACgCT,EADhC,oBAK9B,SAASW,EAAkBF,GAChC,OAAOR,EAA6B,sCAAD,OACKQ,EADL,4BACgCT,EADhC","sources":["components/MovieLinkList/MovieLinkList.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","service/moviesApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieLinkList = ({ data }) => {\n  return (\n    data && (\n      <ul>\n        {data.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n\nMovieLinkList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number, title: PropTypes.string })\n  ),\n};\n\nexport default MovieLinkList;\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nexport const SearchForm = () => {\n  const [query, setQuery] = useState('');\n\n  const navigate = useNavigate();\n\n  const { pathname, search } = useLocation();\n\n  useEffect(() => {\n    const searchQuery = search.slice(8);\n    if (!searchQuery) {\n      return;\n    }\n\n    setQuery(searchQuery);\n  }, [search]);\n\n  const handleStateChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return alert('Please insert valid request!');\n    }\n\n    navigate(`${pathname}?search=${query}`);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={query}\n        placeholder=\"Search movies\"\n        onChange={handleStateChange}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport MovieLinkList from 'components/MovieLinkList/MovieLinkList';\nimport { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport * as Api from '../service/moviesApi';\n\nconst MoviesPage = () => {\n  const [data, setData] = useState(null);\n  const { search } = useLocation();\n\n  useEffect(() => {\n    const query = search.slice(8);\n    if (!query) {\n      return;\n    }\n\n    Api.fetchSearchMovies(query).then(data => {\n      setData(data.data.results);\n    });\n  }, [search]);\n\n  return (\n    <>\n      <SearchForm />\n      {data && <MovieLinkList data={data} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nconst API_KEY = '123f947c685fb26961bd016d0ca5c833';\n\nasync function fetchMoviesWithErrorHandling(url) {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    return new Error('Not found');\n  }\n}\n\nexport function fetchMoviesTrending() {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n"],"names":["data","map","id","title","to","SearchForm","useState","query","setQuery","navigate","useNavigate","useLocation","pathname","search","useEffect","searchQuery","slice","onSubmit","e","preventDefault","trim","alert","type","value","placeholder","onChange","currentTarget","toLowerCase","setData","Api","then","results","MovieLinkList","API_KEY","fetchMoviesWithErrorHandling","url","axios","response","Error","fetchMoviesTrending","fetchSearchMovies","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/homePage-view.f95105fc.chunk.js","mappings":"8MAGMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iLAYTE,EAAWF,EAAAA,GAAAA,EAAH,2EAKRG,EAAaH,EAAAA,GAAAA,GAAH,2LASVI,EAAYJ,EAAAA,GAAAA,GAAH,oL,SCMf,EAzBsB,SAAC,GAAc,IAAZK,EAAW,EAAXA,KACvB,OACEA,IACE,SAACF,EAAD,UACGE,EAAKC,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACtB,OACE,SAACL,EAAD,WACE,UAACL,EAAD,CAAWW,GAAE,kBAAaH,GAA1B,WACE,gBAAKI,IAVE,kCAUoBF,EAAaG,IAAKJ,KAC7C,UAACN,EAAD,eAAYM,SAHAD,U,+ECO5B,UAnBiB,WACf,OAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOR,EAAP,KAAaS,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KACGC,MAAK,SAAAZ,GACJ,OAAOA,EAAKA,KAAKa,WAElBD,KAAKH,KACP,KAGD,iCACE,eAAIK,MAAO,CAAEC,MAAO,WAApB,8BACA,SAAC,IAAD,CAAef,KAAMA,S,0MCjBrBgB,EAAU,mCAAhB,SAEeC,EAA6B,GAA7BA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4CC,GAA5C,gGAE2BC,IAAAA,IAAUD,GAFrC,cAEUE,EAFV,yBAGWA,GAHX,yDAKW,IAAIC,MAAM,cALrB,gFASO,SAASC,IACd,OAAOL,EAA6B,4DAAD,OAC2BD,IAIzD,SAASO,EAAkBC,GAChC,OAAOP,EAA6B,qDAAD,OACoBD,EADpB,iCACoDQ,EADpD,yBAK9B,SAASC,EAAkBC,GAChC,OAAOT,EAA6B,sCAAD,OACKS,EADL,oBACwBV,EADxB,oBAK9B,SAASW,EAAkBD,GAChC,OAAOT,EAA6B,sCAAD,OACKS,EADL,4BACgCV,EADhC,oBAK9B,SAASY,EAAkBF,GAChC,OAAOT,EAA6B,sCAAD,OACKS,EADL,4BACgCV,EADhC","sources":["components/MovieLinkList/MovieLinkList.styled.js","components/MovieLinkList/MovieLinkList.jsx","pages/HomePage.jsx","service/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst MovieLink = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  font-weight: 500;\n  color: #2a363b;\n  font-size: 18px;\n\n  &:hover {\n    color: #2196f3;\n  }\n`;\n\nconst LinkText = styled.p`\n  padding: 25px 20px 15px;\n  text-align: center;\n`;\n\nconst MoviesList = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-gap: 15px;\n  grid-template-columns: repeat(auto-fill, 300px);\n  margin-bottom: 40px;\n  padding-top: 30px;\n`;\n\nconst MovieItem = styled.li`\n  overflow: hidden;\n  border: 1px solid #eee56b;\n  border-radius: 10px;\n  background-color: #ddddddc4;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport { MoviesList, MovieItem, MovieLink, LinkText };\n","import PropTypes from 'prop-types';\nimport {\n  MoviesList,\n  MovieItem,\n  MovieLink,\n  LinkText,\n} from './MovieLinkList.styled';\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieLinkList = ({ data }) => {\n  return (\n    data && (\n      <MoviesList>\n        {data.map(({ id, title, poster_path }) => {\n          return (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`}>\n                <img src={BASE_IMAGE_URL + poster_path} alt={title} />\n                <LinkText> {title}</LinkText>\n              </MovieLink>\n            </MovieItem>\n          );\n        })}\n      </MoviesList>\n    )\n  );\n};\n\nMovieLinkList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number, title: PropTypes.string })\n  ),\n};\n\nexport default MovieLinkList;\n","import { useState, useEffect } from 'react';\nimport MovieLinkList from '../components/MovieLinkList/MovieLinkList';\nimport * as Api from '../service/moviesApi';\n\nconst HomePage = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    Api.fetchMoviesTrending()\n      .then(data => {\n        return data.data.results;\n      })\n      .then(setData);\n  }, []);\n\n  return (\n    <>\n      <h1 style={{ color: '#2a363b' }}>Trending today:</h1>\n      <MovieLinkList data={data} />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\nconst API_KEY = '123f947c685fb26961bd016d0ca5c833';\n\nasync function fetchMoviesWithErrorHandling(url) {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    return new Error('Not found');\n  }\n}\n\nexport function fetchMoviesTrending() {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchMoviesWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n"],"names":["MovieLink","styled","Link","LinkText","MoviesList","MovieItem","data","map","id","title","poster_path","to","src","alt","useState","setData","useEffect","Api","then","results","style","color","API_KEY","fetchMoviesWithErrorHandling","url","axios","response","Error","fetchMoviesTrending","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}